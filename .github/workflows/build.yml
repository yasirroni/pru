name: build

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  linters:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'
      - name: Install Ruff
        run: |
          python -m pip install --upgrade pip
          pip install ruff
      - name: Run Ruff
        run: ruff check .

  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]

    runs-on: ubuntu-latest

    steps:
      - name: Clone this repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'

      - name: Upgrade pip and install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install package
        run: pip install -e ."[dev]"

      - name: Test package
        id: pytest
        run: |
          pytest . -c pyproject.toml --cov-report term-missing --cov=src/pru
        continue-on-error: true

      - name: Run pru if tests fail
        if: steps.pytest.outcome != 'success'
        run: |
          python_version_minor=$(python -c "import sys; print(f'{sys.version_info.minor}')")
          pru -r pytests/requirements/3_${python_version_minor}/requirements_single.txt
          pru -r pytests/requirements/3_${python_version_minor}/requirements_mix.txt
          cat pytests/requirements/3_${python_version_minor}/requirements_single.txt
          cat pytests/requirements/3_${python_version_minor}/requirements_mix.txt
